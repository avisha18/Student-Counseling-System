import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "/components/ui/card";
import { Button } from "/components/ui/button";
import { Input } from "/components/ui/input";
import { Label } from "/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";

const StudentCounsellingSystem = () => {
  const [activeTab, setActiveTab] = useState('dashboard');
  const [students, setStudents] = useState([
    { id: 1, name: 'Rajesh Kumar', email: 'rajesh@example.com', rank: 125, branch: 'Computer Science', status: 'Allocated' },
    { id: 2, name: 'Priya Sharma', email: 'priya@example.com', rank: 89, branch: 'Electronics', status: 'Allocated' },
    { id: 3, name: 'Amit Singh', email: 'amit@example.com', rank: 210, branch: 'Mechanical', status: 'Pending' },
    { id: 4, name: 'Sneha Patel', email: 'sneha@example.com', rank: 156, branch: 'Civil', status: 'Pending' },
  ]);
  
  const [newStudent, setNewStudent] = useState({ name: '', email: '', rank: '' });
  const [selectedStudent, setSelectedStudent] = useState(null);
  const [availableBranches] = useState(['Computer Science', 'Electronics', 'Mechanical', 'Civil', 'Electrical']);
  const [availableSubjects] = useState(['Mathematics', 'Physics', 'Chemistry', 'Programming', 'Engineering Drawing']);

  const handleAddStudent = () => {
    if (newStudent.name && newStudent.email && newStudent.rank) {
      const newStudentObj = {
        id: students.length + 1,
        name: newStudent.name,
        email: newStudent.email,
        rank: parseInt(newStudent.rank),
        branch: '',
        status: 'Pending'
      };
      setStudents([...students, newStudentObj]);
      setNewStudent({ name: '', email: '', rank: '' });
    }
  };

  const handleDeleteStudent = (id) => {
    setStudents(students.filter(student => student.id !== id));
  };

  const handleAllotBranch = (studentId, branch) => {
    setStudents(students.map(student => 
      student.id === studentId ? { ...student, branch, status: 'Allocated' } : student
    ));
  };

  const handleAllotSubject = (studentId, subject) => {
    // In a real implementation, this would update the student's subjects
    alert(`Subject ${subject} allotted to student ${studentId}`);
  };

  return (
    <div className="min-h-screen bg-background p-6">
      <div className="max-w-7xl mx-auto">
        <div className="flex flex-col md:flex-row justify-between items-center mb-8">
          <div>
            <h1 className="text-3xl font-bold text-foreground">Student Counseling System</h1>
            <p className="text-muted-foreground">Manage student admissions and counseling process</p>
          </div>
          <div className="flex space-x-2 mt-4 md:mt-0">
            <Button 
              variant={activeTab === 'dashboard' ? 'default' : 'outline'} 
              onClick={() => setActiveTab('dashboard')}
            >
              Dashboard
            </Button>
            <Button 
              variant={activeTab === 'students' ? 'default' : 'outline'} 
              onClick={() => setActiveTab('students')}
            >
              Students
            </Button>
            <Button 
              variant={activeTab === 'counseling' ? 'default' : 'outline'} 
              onClick={() => setActiveTab('counseling')}
            >
              Counseling
            </Button>
          </div>
        </div>

        {activeTab === 'dashboard' && (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>Total Students</CardTitle>
                <CardDescription>Registered in the system</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-3xl font-bold">{students.length}</p>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle>Allocated Students</CardTitle>
                <CardDescription>Branch allocation completed</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-3xl font-bold">
                  {students.filter(s => s.status === 'Allocated').length}
                </p>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle>Pending Counseling</CardTitle>
                <CardDescription>Awaiting branch allocation</CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-3xl font-bold">
                  {students.filter(s => s.status === 'Pending').length}
                </p>
              </CardContent>
            </Card>

            <div className="md:col-span-2 lg:col-span-3">
              <Card>
                <CardHeader>
                  <CardTitle>Recent Counseling Activities</CardTitle>
                  <CardDescription>Latest student allocations</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    {students.slice(0, 3).map(student => (
                      <div key={student.id} className="flex justify-between items-center p-3 border rounded-lg">
                        <div>
                          <p className="font-medium">{student.name}</p>
                          <p className="text-sm text-muted-foreground">Rank: {student.rank}</p>
                        </div>
                        <div className={`px-3 py-1 rounded-full text-xs ${
                          student.status === 'Allocated' 
                            ? 'bg-green-100 text-green-800' 
                            : 'bg-yellow-100 text-yellow-800'
                        }`}>
                          {student.status}
                        </div>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        )}

        {activeTab === 'students' && (
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <div className="lg:col-span-2">
              <Card>
                <CardHeader>
                  <CardTitle>Student List</CardTitle>
                  <CardDescription>All registered students</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="overflow-x-auto">
                    <table className="w-full">
                      <thead>
                        <tr className="border-b">
                          <th className="text-left p-2">Name</th>
                          <th className="text-left p-2">Email</th>
                          <th className="text-left p-2">Rank</th>
                          <th className="text-left p-2">Branch</th>
                          <th className="text-left p-2">Status</th>
                          <th className="text-left p-2">Actions</th>
                        </tr>
                      </thead>
                      <tbody>
                        {students.map(student => (
                          <tr key={student.id} className="border-b">
                            <td className="p-2">{student.name}</td>
                            <td className="p-2">{student.email}</td>
                            <td className="p-2">{student.rank}</td>
                            <td className="p-2">{student.branch || 'Not allocated'}</td>
                            <td className="p-2">
                              <span className={`px-2 py-1 rounded text-xs ${
                                student.status === 'Allocated' 
                                  ? 'bg-green-100 text-green-800' 
                                  : 'bg-yellow-100 text-yellow-800'
                              }`}>
                                {student.status}
                              </span>
                            </td>
                            <td className="p-2">
                              <Button 
                                variant="ghost" 
                                size="sm" 
                                onClick={() => setSelectedStudent(student)}
                                className="mr-2"
                              >
                                Edit
                              </Button>
                              <Button 
                                variant="ghost" 
                                size="sm" 
                                onClick={() => handleDeleteStudent(student.id)}
                                className="text-red-600 hover:text-red-800"
                              >
                                Delete
                              </Button>
                            </td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                </CardContent>
              </Card>
            </div>

            <div>
              <Card>
                <CardHeader>
                  <CardTitle>Add New Student</CardTitle>
                  <CardDescription>Register a new candidate</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div>
                      <Label htmlFor="name">Full Name</Label>
                      <Input
                        id="name"
                        value={newStudent.name}
                        onChange={(e) => setNewStudent({...newStudent, name: e.target.value})}
                        placeholder="Enter student name"
                      />
                    </div>
                    <div>
                      <Label htmlFor="email">Email Address</Label>
                      <Input
                        id="email"
                        type="email"
                        value={newStudent.email}
                        onChange={(e) => setNewStudent({...newStudent, email: e.target.value})}
                        placeholder="Enter email address"
                      />
                    </div>
                    <div>
                      <Label htmlFor="rank">Entrance Rank</Label>
                      <Input
                        id="rank"
                        type="number"
                        value={newStudent.rank}
                        onChange={(e) => setNewStudent({...newStudent, rank: e.target.value})}
                        placeholder="Enter rank"
                      />
                    </div>
                    <Button onClick={handleAddStudent} className="w-full">
                      Add Student
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        )}

        {activeTab === 'counseling' && (
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <Card>
              <CardHeader>
                <CardTitle>Branch Allocation</CardTitle>
                <CardDescription>Assign branches to students based on rank</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {students.filter(s => s.status === 'Pending').map(student => (
                    <div key={student.id} className="p-4 border rounded-lg">
                      <div className="flex justify-between items-center mb-3">
                        <div>
                          <h3 className="font-medium">{student.name}</h3>
                          <p className="text-sm text-muted-foreground">Rank: {student.rank}</p>
                        </div>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Select onValueChange={(value) => handleAllotBranch(student.id, value)}>
                          <SelectTrigger className="w-full">
                            <SelectValue placeholder="Select a branch" />
                          </SelectTrigger>
                          <SelectContent>
                            {availableBranches.map(branch => (
                              <SelectItem key={branch} value={branch}>{branch}</SelectItem>
                            ))}
                          </SelectContent>
                        </Select>
                      </div>
                    </div>
                  ))}
                  {students.filter(s => s.status === 'Pending').length === 0 && (
                    <p className="text-center text-muted-foreground py-6">
                      All students have been allocated branches.
                    </p>
                  )}
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Subject Allotment</CardTitle>
                <CardDescription>Assign subjects to allocated students</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {students.filter(s => s.status === 'Allocated').slice(0, 3).map(student => (
                    <div key={student.id} className="p-4 border rounded-lg">
                      <div className="flex justify-between items-center mb-3">
                        <div>
                          <h3 className="font-medium">{student.name}</h3>
                          <p className="text-sm text-muted-foreground">{student.branch}</p>
                        </div>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Select onValueChange={(value) => handleAllotSubject(student.id, value)}>
                          <SelectTrigger className="w-full">
                            <SelectValue placeholder="Select a subject" />
                          </SelectTrigger>
                          <SelectContent>
                            {availableSubjects.map(subject => (
                              <SelectItem key={subject} value={subject}>{subject}</SelectItem>
                            ))}
                          </SelectContent>
                        </Select>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <div className="lg:col-span-2">
              <Card>
                <CardHeader>
                  <CardTitle>Counselling Results</CardTitle>
                  <CardDescription>Final allocation status</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="overflow-x-auto">
                    <table className="w-full">
                      <thead>
                        <tr className="border-b">
                          <th className="text-left p-2">Name</th>
                          <th className="text-left p-2">Rank</th>
                          <th className="text-left p-2">Branch</th>
                          <th className="text-left p-2">Status</th>
                        </tr>
                      </thead>
                      <tbody>
                        {students.map(student => (
                          <tr key={student.id} className="border-b">
                            <td className="p-2">{student.name}</td>
                            <td className="p-2">{student.rank}</td>
                            <td className="p-2">{student.branch || 'Not allocated'}</td>
                            <td className="p-2">
                              <span className={`px-2 py-1 rounded text-xs ${
                                student.status === 'Allocated' 
                                  ? 'bg-green-100 text-green-800' 
                                  : 'bg-yellow-100 text-yellow-800'
                              }`}>
                                {student.status}
                              </span>
                            </td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default StudentCounsellingSystem;
